<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
</head>
<style>
    * {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }

    body {
        font-family: Arial, sans-serif;
        background-color: #f4f4f4;
    }

    #reset-pass-cont {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background: white;
        /* White background for the form */
        border-radius: 0.5rem;
        /* Rounded corners */
        box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
        /* Subtle shadow */
        padding: 2rem;
        /* Padding around the form */
        width: 100%;
        /* Responsive width */
        max-width: 450px;
        /* Maximum width */
    }

    h1 {
        color: #106262;
        /* Title color */
        margin-bottom: 1.5rem;
        /* Space below the title */
        text-align: center;
        /* Center the title */
        font-size: 1.8rem;
        /* Font size for the title */
        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
        /* Shadow effect */
        padding: 0.5rem;
        /* Padding around the title */
        border-radius: 0.5rem;
        /* Rounded corners for the title */
    }

    #resetPass-child-cont {
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        width: 100%;
        /* Full width */
    }

    .reset-pass-inps {
        background: rgba(105, 105, 105, 0.3);
        /* Light gray background */
        padding: 0.5rem;
        /* Padding inside inputs */
        font-size: 1rem;
        /* Font size */
        border: 1px solid #ccc;
        /* Light border */
        border-radius: 0.25rem;
        /* Rounded corners */
        margin-bottom: 1rem;
    }

    .reset-pass-inps:focus {
        border-color: #106262;
        /* Border color on focus */
        outline: none;
        /* Remove outline */
    }

    #resetPass-child-cont>div {
        display: flex;
        justify-content: space-between;
        /* Space between label and input */
        align-items: center;
        /* Center items vertically */
    }

    #resetPass-child-cont>div>label {
        font-size: 1rem;
        /* Font size for labels */
        color: #333;
        /* Darker color for better readability */
        flex: 1;
        /* Allow label to take necessary space */
    }

    #resetPassword {
        color: white;
        /* Button text color */
        width: 100%;
        /* Full width for button */
        height: 2.5rem;
        /* Height for button */
        font-size: 1.2rem;
        /* Font size for button */
        border-radius: 0.5rem;
        /* Rounded corners */
        background: #106262;
        /* Button background color */
        border: none;
        /* No border */
        font-weight: bold;
        /* Bold text */
        cursor: pointer;
        /* Pointer cursor on hover */
        transition: background 0.3s, transform 0.3s;
        /* Smooth transition */
    }

    #resetPassword:hover {
        background: #0e4f4f;
        /* Darker shade on hover */
        transform: scale(1.05);
        /* Slightly enlarge on hover */
    }

    #resetPassword:active {
        transform: scale(0.95);
        /* Slightly shrink on click */
    }

    #formcont {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    /* Media Queries for Responsiveness */
    @media (max-width: 768px) {
        #reset-pass-cont {
            width: 95%;
            /* Adjust width for smaller screens */
        }
    }

    .notification {
        display: none;
        /* Hidden by default */
        position: fixed;
        /* Fixed position */
        top: 20px;
        /* Position from the top */
        left: 50%;
        /* Center horizontally */
        transform: translateX(-50%);
        /* Center adjustment */
        background-color: #106262;
        /* Background color */
        color: white;
        /* Text color */
        padding: 1rem;
        /* Padding around the text */
        border-radius: 0.5rem;
        /* Rounded corners */
        z-index: 1000;
        /* Ensure it appears above other content */
        transition: opacity 0.5s ease;
        /* Smooth transition for opacity */
    }

    #errorMessage {
        color: red;
        margin-top: 10px;
        font-size: 0.9em;
    }
    .eye {
    position: absolute;
    top: 4.5rem;
    left: 22.5rem;
    cursor: pointer;
    z-index: 7;
    color: black;
}

.fa-eye {
    display: none;
}
</style>

<body>
    <%- include('../public/loader.html'); %>
        <%- include('./header.ejs') %>
            <div id="formcont">
                <form id="reset-pass-cont" method="post" enctype="application/x-www-form-urlencoded">
                    <h1>Reset Password</h1>
                    <div id="resetPass-child-cont">
                        <div ><label for="oldPass">Old Password : </label> <input type="password" id="oldPass"
                                name="oldPassword" class="reset-pass-inps" placeholder="enter old Password"
                                required>
                        </div>
                        <div style="position: relative;">
                            <label for="newPass">New Password : </label>
                            <input type="password" id="newPass" name="newPassword" class="reset-pass-inps" placeholder="enter new Password" required>
                            <i class="fa-solid fa-eye eye" onclick="togglePasswordVisibility('newPass')"></i>
                            <i class="fa-solid fa-eye-slash eye" onclick="togglePasswordVisibility('newPass')"></i>
                        </div>
                        <div><label for="cnfPass">Confirm Password : </label> <input type="password" id="cnfPass"
                                placeholder="confirm new Password" class="reset-pass-inps" required>
                        </div>
                    </div>
                    <span id="errorMessage"></span>
                    <button type="submit" id="resetPassword">submit</button>
                </form>
            </div>
            <div id="notification" class="notification"></div>

            <script src="https://kit.fontawesome.com/126cda3aca.js" crossorigin="anonymous"></script>
            <script id="js">

                function eye() {
                    if (document.getElementById('cnfPass').type == "password") {
                        document.getElementById('cnfPass').type = "text";
                        document.querySelectorAll('.eye')[0].style.visibility = "visible";
                        document.querySelectorAll('.eye')[1].style.visibility = "hidden";
                    } else {
                        document.getElementById('cnfPass').type = "password";
                        document.querySelectorAll('.eye')[0].style.visibility = "hidden";
                        document.querySelectorAll('.eye')[1].style.visibility = "visible";
                    }
                }

                document.getElementById('reset-pass-cont').addEventListener('submit', async (e) => {
                    e.preventDefault();
                    const newPassword = document.getElementById('newPass').value.trim();
                    const confirmPassword = document.getElementById('cnfPass').value.trim();
                    const passwordErrors = validatePassword(newPassword);

                    // Check if there are any password errors
                    if (passwordErrors.length > 0) {
                        errorMessage.textContent = passwordErrors.join(' ');
                        return; // Stop further execution
                    }

                    // Validate password match
                    if (newPassword !== confirmPassword) {
                        errorMessage.textContent = 'Passwords do not match';
                        return; // Stop further execution
                    }
                    const notification = document.getElementById('notification');
                    document.getElementById('loader-container-container').style.display = "block"

                    try {
                        const response = await fetch('/dashbord/passwordReset', {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                oldPassword: document.getElementById('oldPass').value,
                                newPassword: document.getElementById('newPass').value
                            })
                        });
                        document.getElementById('loader-container-container').style.display = "none"
                        const result = await response.json();

                        if (result.success) {
                            showNotification('Your password has been changed successfully.', 'success');
                            const inputs = document.getElementsByTagName('input');
                            for (let i = 0; i < inputs.length; i++) {
                                inputs[i].value = "";
                            }
                        } else {
                            showNotification('Invalid old password.', 'error');
                            console.error('Error submitting form:', result.error);
                        }
                    } catch (error) {
                        document.getElementById('loader-container-container').style.display = "none"
                        showNotification('Something went wrong! Please try again later.', 'error');
                        console.error('Error submitting form:', error);
                    }
                });

                function showNotification(message, type) {
                    const notification = document.getElementById('notification');
                    notification.textContent = message;
                    notification.style.display = 'block';
                    notification.style.opacity = '1';

                    // Set background color based on type
                    notification.style.backgroundColor = type === 'success' ? '#4CAF50' : '#F44336'; // Green for success, red for error

                    // Hide notification after 3 seconds
                    setTimeout(() => {
                        notification.style.opacity = '0';
                        setTimeout(() => {
                            notification.style.display = 'none';
                        }, 500); // Wait for the fade-out effect before hiding
                    }, 3000);
                }

                function validatePassword(password) {
                    const errors = [];
                    const lengthRequirement = password.length >= 8;
                    const uppercaseRequirement = /[A-Z]/.test(password);
                    const lowercaseRequirement = /[a-z]/.test(password);
                    const numberRequirement = /\d/.test(password);
                    const specialCharacterRequirement = /[@$!%*?&]/.test(password);

                    if (!lengthRequirement) {
                        errors.push('Password must be at least 8 characters long.');
                    }
                    if (!uppercaseRequirement) {
                        errors.push('Password must contain at least one uppercase letter.');
                    }
                    if (!lowercaseRequirement) {
                        errors.push('Password must contain at least one lowercase letter.');
                    }
                    if (!numberRequirement) {
                        errors.push('Password must contain at least one number.');
                    }
                    if (!specialCharacterRequirement) {
                        errors.push('Password must contain at least one special character.');
                    }

                    return errors;
                }
            </script>
</body>

</html>