<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        body {
            background: #222f3e;
        }

        form {
            padding: .5rem;
            background: #222f3e;

        }

        #form-cont {
            display: flex;
            flex-direction: column;
            height: 10rem;
            justify-content: space-evenly;
        }

        #form-cont>div {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        #form-cont label {
            width: 100px;
            text-align: right;
            margin-right: 10px;
            color: white;
        }

        #form-cont input,
        #form-cont textarea,
        #form-cont select {
            flex: 1;
            border-radius: .5rem;
            background: #d7d7d778;
            padding: .3rem;
        }

        button {
            font-weight: bold;
            font-size: 1.4rem;
            background: darkcyan;
            border-radius: 1rem;
            padding: 0.3rem;
            width: 12rem;
            border: none;
        }
    </style>
</head>

<body>

    <form action="" id="editor" method="post" enctype="application/x-www-form-urlencoded">
        <h1 style="text-align: center; color: white; margin: .8rem;">Post a blog</h1>
        <div id="form-cont">
            <div><label for="title">Title : </label> <input type="text" id="title" required></div>
            <div><label for="description">Description : </label> <textarea name="description" id="description" cols="30"
                    rows="3" style="resize:none;" required></textarea></div>
            <div>
                <label for="category">Category : </label>
                <select name="" id="category" required>
                    <option value="">-- Select an option --</option>
                    <option value="travel">travel</option>
                    <option value="entertainment">entertainment</option>
                    <option value="education">education</option>
                    <option value="finance">finance</option>
                    <option value="health & fitness">health & fitness</option>
                </select>
            </div>
        </div>
        <div id="blog-post-editor"></div>
        <div style="display: flex; justify-content: center; margin-top: .3rem;"><button>Create post</button></div>
    </form>

    <script src="https://cdn.tiny.cloud/1/<%= tinymce %>/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
    <script>

        tinymce.init({
            selector: '#blog-post-editor',
            skin: 'oxide-dark',
            plugins: ['preview', 'wordcount', 'table', 'searchreplace', 'media', 'image'],
            toolbar: ['undo redo | styleselect | bold italic | alignleft aligncenter alignright | bullist numlist | link image | preview | wordcount | table tabledelete | tableprops tablerowprops tablecellprops | tableinsertrowbefore tableinsertrowafter tabledeleterow | tableinsertcolbefore tableinsertcolafter tabledeletecol | searchreplace | media '],
            /* enable title field in the Image dialog*/
            image_title: true,
            /* enable automatic uploads of images represented by blob or data URIs*/
            automatic_uploads: true,
            /*
              URL of our upload handler (for more details check: https://www.tiny.cloud/docs/configure/file-image-upload/#images_upload_url)
              images_upload_url: 'postAcceptor.php',
              here we add custom filepicker only to Image dialog
            */
            file_picker_types: 'image',
            /* and here's our custom image picker*/
            file_picker_callback: (cb, value, meta) => {
                const input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');

                input.addEventListener('change', (e) => {
                    const file = e.target.files[0];

                    const reader = new FileReader();
                    reader.addEventListener('load', () => {
                        /*
                          Note: Now we need to register the blob in TinyMCEs image blob
                          registry. In the next release this part hopefully won't be
                          necessary, as we are looking to handle it internally.
                        */
                        const id = 'blobid' + (new Date()).getTime();
                        const blobCache = tinymce.activeEditor.editorUpload.blobCache;
                        const base64 = reader.result.split(',')[1];
                        const blobInfo = blobCache.create(id, file, base64);
                        blobCache.add(blobInfo);

                        /* call the callback and populate the Title field with the file name */
                        cb(blobInfo.blobUri(), { title: file.name });
                    });
                    reader.readAsDataURL(file);
                });

                input.click();
            },

        });

        const getEditorContent = async () => {
            const editor = await tinymce.get('blog-post-editor');
            if (editor) {
                console.log(editor.getContent());
            } else {
                console.error('Editor instance not found!');
            }
        };

        document.querySelector("button").addEventListener('click', getEditorContent);

    </script>
</body>

</html>