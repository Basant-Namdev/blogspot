<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        /* Reset some default styles */
        /* Reset some default styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        #cont {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #e9ecef;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        form {
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            width: 350px;
            text-align: center;
        }

        h1 {
            margin-bottom: 20px;
            font-size: 1.8em;
            color: #333;
        }

        h2 {
            margin: 10px 0;
            font-size: 1.4em;
            color: #555;
        }

        h3 {
            font-size: 1em;
            color: #888;
        }

        img {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            margin-bottom: 15px;
        }

        input[type="password"] {
            width: 100%;
            padding: 12px;
            margin: 10px 0;
            border: 1px solid #ced4da;
            border-radius: 5px;
            font-size: 1em;
            transition: border-color 0.3s;
        }

        input[type="password"]:focus {
            border-color: #007BFF;
            outline: none;
            box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
        }

        button {
            width: 100%;
            padding: 12px;
            background-color: #007BFF;
            border: none;
            border-radius: 5px;
            color: white;
            font-size: 1em;
            cursor: pointer;
            transition: background-color 0.3s, transform 0.2s;
        }

        button:hover {
            background-color: #0056b3;
            transform: translateY(-2px);
        }

        #errorMessage {
            color: red;
            margin-top: 10px;
            font-size: 0.9em;
        }
    </style>
</head>

<body>
    <%- include('../public/loader.html'); %>
    <div id="cont">
        <form action="" method="post" id="resetPasswordForm" enctype="application/x-www-form-urlencoded">
            <h1>Reset your password</h1>
            <div><img src="<%= user.profile%>" alt=""></div>
            <h2>
                <%= user.name%>
            </h2>
            password : <input type="password" name="password" id="password" required>
            confirm password : <input type="password" name="confirm-password" id="confirm-password" required>
            <span id="errorMessage"></span>
            <button type="submit">Submit</button>
        </form>
    </div>

        <script>
            // Get the token from the URL
            const url = window.location.href;
            const token = url.split('reset-password/')[1]

            const errorMessage = document.getElementById('errorMessage')

            document.getElementById('resetPasswordForm').addEventListener('submit', async (e) => {
                e.preventDefault(); // Prevent the default form submission
                const newPassword = document.getElementById('password').value.trim();
                const confirmPassword = document.getElementById('confirm-password').value.trim();
                const passwordErrors = validatePassword(newPassword);

                // Check if there are any password errors
                if (passwordErrors.length > 0) {
                    errorMessage.textContent = passwordErrors.join(' ');
                    return; // Stop further execution
                }

                // Validate password match
                if (newPassword !== confirmPassword) {
                    errorMessage.textContent = 'Passwords do not match';
                    return; // Stop further execution
                }

                document.getElementById('loader-container-container').style.display = "block"
                try {
                    const response = await fetch(`/reset-password/${token}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ password: newPassword }),
                    });
                    document.getElementById('loader-container-container').style.display = "none"
                    if (response.ok) {
                        // Password reset successful
                        alert('Password has been reset successfully!');
                        window.location.href = '/';
                    } else {
                        // Handle error
                        const errorText = await response.text();
                        alert(`Error: ${errorText}`);
                    }
                } catch (error) {
                    document.getElementById('loader-container-container').style.display = "none"
                    console.error('Error:', error);
                    alert('An error occurred while resetting the password.');
                }
            });

            function validatePassword(password) {
                const errors = [];
                const lengthRequirement = password.length >= 8;
                const uppercaseRequirement = /[A-Z]/.test(password);
                const lowercaseRequirement = /[a-z]/.test(password);
                const numberRequirement = /\d/.test(password);
                const specialCharacterRequirement = /[@$!%*?&]/.test(password);

                if (!lengthRequirement) {
                    errors.push('Password must be at least 8 characters long.');
                }
                if (!uppercaseRequirement) {
                    errors.push('Password must contain at least one uppercase letter.');
                }
                if (!lowercaseRequirement) {
                    errors.push('Password must contain at least one lowercase letter.');
                }
                if (!numberRequirement) {
                    errors.push('Password must contain at least one number.');
                }
                if (!specialCharacterRequirement) {
                    errors.push('Password must contain at least one special character.');
                }

                return errors;
            }

        </script>
</body>

</html>